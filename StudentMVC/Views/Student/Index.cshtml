@model IEnumerable<BLL.StudentDto.StudentDTO>
@using Microsoft.AspNetCore.Mvc.TagHelpers
@(
Html.DevExtreme().DataGrid<BLL.StudentDto.StudentDTO>()
                .ID("StudentGrid")
                .DataSource(ds => ds.Mvc()
                    .Controller("Students")
                    .LoadAction("Get")
                    .InsertAction("Post")
                    .UpdateAction("Put")
                    .DeleteAction("Delete")
                    .Key("Id")
                )

    .RemoteOperations(true)
    .Columns(columns => {

        columns.AddFor(m => m.FirstName);

        columns.AddFor(m => m.LastName);

        columns.AddFor(m => m.MiddleName);

        columns.AddFor(m => m.TicketNumber);

        columns.AddFor(m => m.BirthYear);

        columns.AddFor(m => m.BirthPlace);

        columns.AddFor(m => m.Address);

        columns.AddFor(m => m.Gender);

        columns.AddFor(m => m.MaritalStatus);

        columns.AddFor(m => m.Gmail);
    })
    .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        .Mode(GridEditMode.Form)
        .Form(form =>
        {
            form
                .ColCount(1)
                .Items(items =>
                {
                    items.AddGroup()
                        .Caption("Personal Information")
                        .Items(groupitems =>
                        {
                            groupitems.AddSimpleFor(m => m.FirstName).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.LastName).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.MiddleName).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.TicketNumber).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.BirthYear).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.BirthPlace).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.Address).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.Gender).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.MaritalStatus).IsRequired(false);
                            groupitems.AddSimpleFor(m => m.Gmail).IsRequired(true);
                        });
                });
        })
    )
    .Paging(paging => paging.PageSize(5))
    .Pager(pager =>
    {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new JS("[5,7,'all']"));
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
    })
    .FilterRow(filter => filter.Visible(true))
    .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
        .Placeholder("Search...")
    )
  
 .Toolbar(toolbar =>
{
    toolbar.Items(items =>
    {
        items.Add().Name("addRowButton");
        items.Add().Name("searchPanel");
        items.Add().Widget(w =>
            w.Button()
                .Icon("refresh")
                .OnClick("reloadGrid")
        );
    });
})
)

<script>
    function reloadGrid() {
        var grid = $("#StudentGrid").dxDataGrid("instance");
        grid.refresh();
    }
</script>

